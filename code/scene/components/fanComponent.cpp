#include "scene/components/fanComponent.hpp"
#include "scene/fanSceneInstantiate.hpp"
#include "scene/fanGameobject.hpp"
#include "core/input/fanInput.hpp"

namespace fan
{
	REGISTER_ABSTRACT_TYPE_INFO( Component )

	//================================================================================================================================
	//================================================================================================================================
	Component::Component() :
		m_isRemovable( true )
	{}

	//================================================================================================================================
	//================================================================================================================================
	Component::~Component()
	{
		// Unregister pointers
		if ( IsReferenced() )
		{
			m_gameobject->GetScene().GetInstanciator().UnregisterPointersForComponent( this );
		}
	}

	//================================================================================================================================
	//================================================================================================================================
	void Component::OnAttach() {};
	void Component::OnDetach() {}
	void Component::OnGui() {}

	//================================================================================================================================
	//================================================================================================================================
	bool Component::Save( Json& _json ) const
	{
		Serializable::SaveUInt( _json, "id", GetType() );
		Serializable::SaveString( _json, "type", GetName() );
		return true;
	}

	//================================================================================================================================
	//================================================================================================================================
	bool Component::Load( const Json& /*_json*/ )
	{
		return true;
	}
}