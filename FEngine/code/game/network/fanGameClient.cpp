#include "fanGlobalIncludes.h"
#include "game/network/fanGameClient.h"

#include "core/input/fanInputManager.h"
#include "core/input/fanInput.h"
#include "core/input/fanMouse.h"
#include "core/input/fanJoystick.h"
#include "scene/components/fanCamera.h"
#include "scene/components/fanTransform.h"

namespace fan
{
	REGISTER_TYPE_INFO( GameClient, TypeInfo::Flags::EDITOR_COMPONENT, "game/net/" )

	//================================================================================================================================
	//================================================================================================================================
	void GameClient::OnAttach()
	{
		Actor::OnAttach();
		m_client.Create("unknown", 53001);
	}

	//================================================================================================================================
	//================================================================================================================================
	void GameClient::OnDetach()
	{
		Actor::OnDetach();
		m_client.UnBind();
	}

	//================================================================================================================================
	//================================================================================================================================
	void GameClient::Start()
	{
		if ( GetScene().IsServer() )
		{
			GetScene().DeleteComponent( this );
			return;
		}

		while ( !m_client.Bind() )
		{
			m_client.SetPort( m_client.GetPort() + 1 );
		}
		m_client.ConnectToServer( 53000, "127.0.0.1" );
	}

	//================================================================================================================================
	//================================================================================================================================
	void GameClient::Update( const float _delta )
	{
		m_client.Update( _delta );
	}

	//================================================================================================================================
	//================================================================================================================================
	void GameClient::LateUpdate( const float /*_delta*/ )
	{

	}
	
	//================================================================================================================================
	//================================================================================================================================
	void GameClient::OnGui()
	{
		Actor::OnGui();

		ImGui::PushItemWidth( 0.6f * ImGui::GetWindowWidth() );
		{

		} ImGui::PopItemWidth();
	}

	//================================================================================================================================
	//================================================================================================================================
	bool GameClient::Load( const Json & _json )
	{
		Actor::Load( _json );
		return true;
	}

	//================================================================================================================================
	//================================================================================================================================
	bool GameClient::Save( Json & _json ) const
	{
		Actor::Save( _json );
		return true;
	}


}